## Cambie las referencias de proyecto al nombre de su proyecto como en los pasos anteriores.
version: '3'
services:
  #Nombre del modulo, como ejemplo, proyecto en servicio y nombre de contenedor
  proyecto: 
    container_name: '${PROJECT_NAME}'
    working_dir: '/var/www/html/' #Ruta interna del docker, no cambiar
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - 8080:80
    #Nombre de la imagen generada con el docker buid  
    image: ${PROJECT_NAME_IMG}
    environment:
      #Variables de entorno, SOURCE y SIMPLE se mantienen sin alterar para uso localhost
      #(para pre y prod se ajustarán segun se configure el despliegue)
      - SOURCE=${SOURCE}
      - SIMPLE=${SIMPLE}  
      # Datos de conexión a su base de datos local (igual, en pre-prod tomará los datos de la configuración de despliegue)
      - ENDPOINT=${ENDPOINT}
      - DATABASE=${MYSQL_DATABASE}
      - USERD=${MYSQL_USER}
      - PASSD=${MYSQL_PASSWORD}
    volumes:
    # Mapeo de la ruta donde está su proyecto y la ruta mapeada dentro del docker 
      - ./public-html/:/var/www/${PROJECT_NAME}/
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      #- ./data/:/var/lib/mysql  #Descomentar si se desea persistencia de datos (Generará una carpeta con cas 200Megas)
      - ./data/:/docker-entrypoint-initdb.d # Ejecutar scripts SQL al iniciar el contenedor por primera vez (no se garantiza persistencia).

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${PROJECT_NAME}_phpmyadmin
    depends_on:
      - mysql
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

volumes:
  mysql_data:  

  